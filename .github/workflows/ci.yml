# .github/workflows/ci.yml
name: Build and Push

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v3

    - name: Get Git SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/backend:${{ steps.vars.outputs.sha_short }}
          ghcr.io/${{ github.repository }}/backend:latest

    - name: Build and push Frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/frontend:${{ steps.vars.outputs.sha_short }}
          ghcr.io/${{ github.repository }}/frontend:latest

    # マニフェストファイルを更新するステップを追加
    - name: Update manifests with Git SHA
      run: |
        echo "Updating manifests with Git SHA: ${{ steps.vars.outputs.sha_short }}"
        
        # バックエンドのイメージタグを更新
        sed -i "s|image: ghcr.io/gen0x39/container-practice/backend:.*|image: ghcr.io/gen0x39/container-practice/backend:${{ steps.vars.outputs.sha_short }}|" manifest/backend-development.yaml
        
        # フロントエンドのイメージタグを更新
        sed -i "s|image: ghcr.io/gen0x39/container-practice/frontend:.*|image: ghcr.io/gen0x39/container-practice/frontend:${{ steps.vars.outputs.sha_short }}|" manifest/frontend-development.yaml

    - name: Commit and push manifest changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add manifest/
        git commit -m "Auto-update images to ${{ steps.vars.outputs.sha_short }}"
        git push
